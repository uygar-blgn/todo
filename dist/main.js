(()=>{"use strict";class e{constructor(e="",t="",c="Low Priority",n="01/01/1970",s=!1){this.name=e,this.desc=t,this.priority=c,this.complete=s,this.due=n}}class t{constructor(e="",t=[]){this.name=e,this.todos=t}}const c=new t("",[]);new class{constructor(e=[]){this.projects=e,this.renderSidebar(),this.renderContent()}renderSidebar(){const e=document.querySelector("#sidebar");e.textContent="",this.projects.forEach((t=>{if(""!=t.name){const c=document.createElement("div");c.className="project",c.textContent=t.name,e.appendChild(c)}}));const c=document.createElement("div");c.id="new-project";const n=document.createElement("img");n.src="https://www.svgrepo.com/show/2087/plus.svg",c.appendChild(n),c.addEventListener("click",(()=>{const n=prompt("Name of new project?"),s=new t(n,[]);this.projects.push(s);const o=document.createElement("div");o.className="project",o.textContent=s.name,e.removeChild(c),e.appendChild(o),e.appendChild(c),this.renderContent()})),e.appendChild(c)}renderContent(){const t=document.querySelector("#content");t.textContent="",this.projects.forEach((c=>{const n=document.createElement("div");if(n.className="project-category",""!=c.name){const e=document.createElement("div");e.className="project-title",e.textContent=c.name,n.appendChild(e)}c.todos.forEach((e=>{const t=document.createElement("div");t.className="task";const s=document.createElement("div");s.className="task-name";const o=document.createElement("div");o.className="task-desc";const d=document.createElement("div");d.className="task-priority";const a=document.createElement("div");a.className="task-due";const r=document.createElement("div");r.className="task-complete";const m=document.createElement("div");m.className="task-delete";const p=document.createElement("img");if(p.src="https://www.svgrepo.com/show/124986/big-trash-can.svg",m.appendChild(p),s.textContent=e.name,o.textContent=e.desc,d.textContent=e.priority,a.textContent=e.due,e.complete){const e=document.createElement("img");e.src="https://www.svgrepo.com/show/309414/checkbox-checked.svg",r.appendChild(e)}else{const e=document.createElement("img");e.src="https://www.svgrepo.com/show/309415/checkbox-unchecked.svg",r.appendChild(e)}r.addEventListener("click",(()=>{e.complete?(e.complete=!1,r.querySelector("img").src="https://www.svgrepo.com/show/309415/checkbox-unchecked.svg",t.style.backgroundColor="white"):(e.complete=!0,r.querySelector("img").src="https://www.svgrepo.com/show/309414/checkbox-checked.svg",t.style.backgroundColor="rgb(200, 200, 200)")})),m.addEventListener("click",(()=>{const t=c.todos.indexOf(e);c.todos.splice(t,1),this.renderContent()})),t.appendChild(s),t.appendChild(o),t.appendChild(d),t.appendChild(a),t.appendChild(r),t.appendChild(m),n.appendChild(t)}));const s=document.createElement("div");s.id="new-task";const o=document.createElement("img");o.src="https://www.svgrepo.com/show/2087/plus.svg",s.appendChild(o),s.addEventListener("click",(()=>{const t=prompt("Task name?"),o=prompt("Task description?"),d=prompt("Task priority?"),a=prompt("Due date?"),r=new e(t,o,d,a,!1);c.todos.push(r);const m=document.createElement("div");m.className="task";const p=document.createElement("div");p.className="task-name";const i=document.createElement("div");i.className="task-desc";const l=document.createElement("div");l.className="task-priority";const h=document.createElement("div");h.className="task-due";const u=document.createElement("div");u.className="task-complete";const w=document.createElement("div");w.className="task-delete";const C=document.createElement("img");C.src="https://www.svgrepo.com/show/124986/big-trash-can.svg",w.appendChild(C),p.textContent=t,i.textContent=o,l.textContent=d,h.textContent=d;const v=document.createElement("img");v.src="https://www.svgrepo.com/show/309415/checkbox-unchecked.svg",u.appendChild(v),u.addEventListener("click",(()=>{r.complete?(r.complete=!1,v.src="https://www.svgrepo.com/show/309415/checkbox-unchecked.svg",m.style.backgroundColor="white"):(r.complete=!0,v.src="https://www.svgrepo.com/show/309414/checkbox-checked.svg",m.style.backgroundColor="rgb(200, 200, 200)")})),w.addEventListener("click",(()=>{const e=c.todos.indexOf(r);c.todos.splice(e,1),this.renderContent()})),m.appendChild(p),m.appendChild(i),m.appendChild(l),m.appendChild(h),m.appendChild(u),m.appendChild(w),n.removeChild(s),n.appendChild(m),n.appendChild(s)})),n.appendChild(s),t.appendChild(n)}))}}([c])})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,